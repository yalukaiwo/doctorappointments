const cardHolder = document.getElementById("cardRoot"),
  nameInput = document.getElementById("nameFilterInput"),
  statusInput = document.getElementById("statusFilterSelect"),
  importancyInput = document.getElementById("importanceFilterSelect");

function filterCards(card) {
  let count = 0;
  const name =
      card.children[0].children[0].children[0].textContent.toLowerCase(),
    date = card.children[0].children[2].children[3].children[1].textContent
      .toLowerCase()
      .split("-"),
    importance =
      card.children[0].children[2].children[0].children[1].textContent.toLowerCase(),
    today = new Date();
  let status;
  if (parseInt(today.getYear()) + 1900 > parseInt(date[2])) {
    status = "done";
  } else if (parseInt(today.getYear()) + 1900 < parseInt(date[2])) {
    status = "open";
  } else if (parseInt(today.getMonth()) > parseInt(date[1]) - 1) {
    status = "done";
  } else if (parseInt(today.getMonth()) < parseInt(date[1]) - 1) {
    status = "open";
  } else if (parseInt(today.getDate()) >= parseInt(date[0])) {
    status = "done";
  } else if (parseInt(today.getDate()) < parseInt(date[0])) {
    status = "open";
  } else {
    status = "open";
  }
  if (
    name.includes(nameInput.value.trim()) &&
    status.includes(statusInput.value) &&
    importance.includes(importancyInput.value)
  ) {
    card.style.display = "block";
    const text1 = document.getElementById("nothingFoundCards");
    text1.style.display = "none";
  } else {
    card.style.display = "none";
    count += 1;
  }
  return count;
}
nameInput.addEventListener("input", () => {
  const cardsList = document.querySelectorAll(".cards__card");
  let numCount = 0;
  cardsList.forEach((card) => {
    numCount += filterCards(card);
    if (numCount === cardsList.length && numCount !== 0) {
      const text1 = document.getElementById("nothingFoundCards");
      text1.style.display = "block";
    }
  });
});

statusInput.onchange = () => {
  const cardsList = document.querySelectorAll(".cards__card");
  let numCount = 0;
  cardsList.forEach((card) => {
    numCount += filterCards(card);
    if (numCount === cardsList.length && numCount !== 0) {
      const text1 = document.getElementById("nothingFoundCards");
      text1.style.display = "block";
    }
  });
};

importancyInput.onchange = () => {
  const cardsList = document.querySelectorAll(".cards__card");
  let numCount = 0;
  cardsList.forEach((card) => {
    numCount += filterCards(card);
    if (numCount === cardsList.length && numCount !== 0) {
      const text1 = document.getElementById("nothingFoundCards");
      text1.style.display = "block";
    }
  });
};

class Visit {
  constructor(name, doctor, importancy, goal, description, date) {
    this.name = name;
    this.doctor = doctor;
    this.importancy = importancy;
    this.goal = goal;
    this.description = description;
    this.date = date;
  }
  async delete(id) {
    let response = await axios({
      url: `https://ajax.test-danit.com/api/v2/cards/${id}`,
      method: "delete",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer 04a749a6-0cb8-43ca-9511-6bc6d5fa9396`,
      },
    });
    if (response.status === 200) {
      this.remov(id);
    }
  }
  remov(id) {
    const cardDelete = document.getElementById(`visit${id}`);
    cardDelete.remove();
    const cards = document.querySelectorAll(".card");
    if (cards.length === 0) {
      document.getElementById("noCardsAdded").style.display = "block";
    }
  }
}
class VisitDentist extends Visit {
  constructor(name, importancy, goal, description, date, lastVisit) {
    super(name, "Dentist", importancy, goal, description, date);
    this.lastVisit = lastVisit;
  }
  async post() {
    let response = await axios({
      url: "https://ajax.test-danit.com/api/v2/cards/",
      method: "post",
      data: {
        name: this.name,
        description: this.description,
        doctor: this.doctor,
        importancy: this.importancy,
        goal: this.goal,
        date: this.date,
        lastVisit: this.lastVisit,
      },
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer 04a749a6-0cb8-43ca-9511-6bc6d5fa9396`,
      },
    });
    this.render(response.data.id);
  }

  render(id) {
    const text = document.getElementById("noCardsAdded");
    text.style.display = "none";
    const root = document.getElementById("cardRoot");
    const card = `<div class="cards__card card" id="visit${id}">
            <div class="card__info-wrapper">
              <div class="card__short-info">
                <h3 class="card__name">${this.name}</h3>
                <h4 class="card__doctor">Dentist</h4>
              </div>
              <div class="card__options options">
                <div class="options__short">
                  <img src="./dist/img/trash.png" alt="delete" class="options__icon" id="delete${id}">
                </div>
                <div class="options__long">
                  <img src="./dist/img/edit.png" alt="edit" class="options__icon" id="edit${id}">
                </div>
              </div>
              <div class="card__full-info">
                <div class="card__element">
                  <p class="card__importancy-text card__text">Importancy:</p>
                  <p class="card__importancy-value card__value">${this.importancy}</p>
                </div>
                <div class="card__element">
                  <p class="card__goal-text card__text">Visit goal:</p>
                  <p class="card__goal-value card__value">
                    ${this.goal}
                  </p>
                </div>
                <div class="card__element">
                  <p class="card__description-text card__text">Description:</p>
                  <p class="card__description-value card__value">
                    ${this.description}
                  </p>
                </div>
                <div class="card__element">
                  <p class="card__description-text card__text">Due date:</p>
                  <p class="card__description-value card__value">
                    ${this.date}
                  </p>
                </div>
                <div class="card__element">
                  <p class="card__problems-text card__text">Last visit:</p>
                  <p class="card__pressure-value card__value">${this.lastVisit}</p>
                </div>
              </div>
            </div>
            <p class="card__showmore" id="showmore${id}">Show more</p>
          </div>`;
    root.innerHTML += card;
  }
  edit() {}
}
class VisitCardiologist extends Visit {
  constructor(
    name,
    importancy,
    goal,
    description,
    date,
    pressure,
    massIndex,
    heartDeseases,
    age
  ) {
    super(name, "Cardiologist", importancy, goal, description, date);
    this.pressure = pressure;
    this.massIndex = massIndex;
    this.heartDeseases = heartDeseases;
    this.age = age;
  }
  async post() {
    let response = await axios({
      url: "https://ajax.test-danit.com/api/v2/cards/",
      method: "post",
      data: {
        name: this.name,
        description: this.description,
        doctor: this.doctor,
        importancy: this.importancy,
        goal: this.goal,
        date: this.date,
        pressure: this.pressure,
        massIndex: this.massIndex,
        heartDeseases: this.heartDeseases,
        age: this.age,
      },
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer 04a749a6-0cb8-43ca-9511-6bc6d5fa9396`,
      },
    });
    this.render(response.data.id);
  }

  render(id) {
    const root = document.getElementById("cardRoot");
    const card = `<div class="cards__card card" id="visit${id}">
            <div class="card__info-wrapper">
              <div class="card__short-info">
                <h3 class="card__name">${this.name}</h3>
                <h4 class="card__doctor">${this.doctor}</h4>
              </div>
              <div class="card__options options">
                <div class="options__short">
                  <img
                    src="./dist/img/trash.png"
                    alt="delete"
                    class="options__icon"
                    id="delete${id}"
                  />
                </div>
                <div class="options__long">
                  <img
                    src="./dist/img/edit.png"
                    alt="edit"
                    class="options__icon"
                    id="edit${id}"
                  />
                </div>
              </div>
              <div class="card__full-info">
                <div class="card__element">
                  <p class="card__importancy-text card__text">Importancy:</p>
                  <p class="card__importancy-value card__value">${this.importancy}</p>
                </div>
                <div class="card__element">
                  <p class="card__goal-text card__text">Visit goal:</p>
                  <p class="card__goal-value card__value">
                    ${this.goal}
                  </p>
                </div>
                <div class="card__element">
                  <p class="card__description-text card__text">Description:</p>
                  <p class="card__description-value card__value">
                    ${this.description}
                  </p>
                </div>
                <div class="card__element">
                  <p class="card__date-text card__text">Due date:</p>
                  <p class="card__date-value card__value">${this.date}</p>
                </div>
                <div class="card__element">
                  <p class="card__pressure-text card__text">Pressure:</p>
                  <p class="card__pressure-value card__value">${this.pressure}</p>
                </div>
                <div class="card__element">
                  <p class="card__mass-text card__text">Mass index:</p>
                  <p class="card__mass-value card__value">${this.massIndex}</p>
                </div>
                <div class="card__element">
                  <p class="card__problems-text card__text">Heart diseases:</p>
                  <p class="card__problems-value card__value">${this.heartDeseases}</p>
                </div>
                <div class="card__element">
                  <p class="card__age-text card__text">Age:</p>
                  <p class="card__age-value card__value">${this.age}</p>
                </div>
              </div>
            </div>
            <p class="card__showmore" id="showmore${id}">Show more</p>
          </div>`;
    root.innerHTML += card;
  }
  edit() {}
}
class VisitTherapist extends Visit {
  constructor(name, importancy, goal, description, date, age) {
    super(name, "Therapist", importancy, goal, description, date);
    this.age = age;
  }
  async post() {
    let response = await axios({
      url: "https://ajax.test-danit.com/api/v2/cards/",
      method: "post",
      data: {
        name: this.name,
        description: this.description,
        doctor: this.doctor,
        importancy: this.importancy,
        goal: this.goal,
        date: this.date,
        age: this.age,
      },
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer 04a749a6-0cb8-43ca-9511-6bc6d5fa9396`,
      },
    });
    this.render(response.data.id);
  }
  render(id) {
    const root = document.getElementById("cardRoot");
    const card = `<div class="cards__card card" id="visit${id}">
            <div class="card__info-wrapper">
              <div class="card__short-info">
                <h3 class="card__name">${this.name}</h3>
                <h4 class="card__doctor">Therapist</h4>
              </div>
              <div class="card__options options">
                <div class="options__short">
                  <img src="./dist/img/trash.png" alt="delete" class="options__icon" id="delete${id}">
                </div>
                <div class="options__long">
                  <img src="./dist/img/edit.png" alt="edit" class="options__icon" id="edit${id}">
                </div>
              </div>
              <div class="card__full-info">
                <div class="card__element">
                  <p class="card__importancy-text card__text">Importancy:</p>
                  <p class="card__importancy-value card__value">${this.importancy}</p>
                </div>
                <div class="card__element">
                  <p class="card__goal-text card__text">Visit goal:</p>
                  <p class="card__goal-value card__value">
                    ${this.goal}
                  </p>
                </div>
                <div class="card__element">
                  <p class="card__description-text card__text">Description:</p>
                  <p class="card__description-value card__value">
                   ${this.description}
                  </p>
                </div>
                <div class="card__element">
                  <p class="card__description-text card__text">Due date:</p>
                  <p class="card__description-value card__value">
                   ${this.date}
                  </p>
                </div>
                <div class="card__element">
                  <p class="card__age-text card__text">Age:</p>
                  <p class="card__age-value card__value">${this.age}</p>
                </div>
              </div>
            </div>
            <p class="card__showmore" id="showmore${id}">Show more</p>
          </div>`;
    root.innerHTML += card;
  }
  edit() {}
}

const c = new VisitDentist("asd", "asd", "asdasd", "asdasd", "asd", "asd");
c.post();

const d = new VisitTherapist("asd", "asd", "asdasd", "asdasd", "asd", "asd");
d.post();

const x = new VisitCardiologist(
  "asd",
  "asd",
  "asdasd",
  "asdasd",
  "asd",
  "asd",
  "asd",
  "asd",
  "asd"
);
x.post();

const switchBtn = document.getElementById("filterSwitch");
const menu = document.getElementById("filtersForm");

switchBtn.addEventListener("click", () => {
  menu.classList.toggle("main__filters--active");
});

const cards = document.getElementById("cardRoot");

cards.addEventListener("click", (e) => {
  if (e.target.id.includes("showmore")) {
    el = e.target;
    const id = "visit" + el.id.split("showmore")[1];
    document.getElementById(id).classList.toggle("card--open");
    if (document.getElementById(id).classList.contains("card--open")) {
      el.textContent = "Show less";
    } else {
      el.textContent = "Show more";
    }
  }
  if (e.target.id.includes("delete")) {
    el = e.target;
    const id = el.id.split("delete")[1];
    const visit = new Visit("1", "1", "1", "1", "1", "1");
    visit.delete(id);
  }
});
